package com.erp.school.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.erp.school.entity.AcademicTimetable;
import com.erp.school.entity.AcademicYear;
import com.erp.school.entity.Board;
import com.erp.school.entity.Dayorder;
import com.erp.school.entity.Institution;
import com.erp.school.entity.MasterFaculty;
import com.erp.school.entity.MasterStudent;
import com.erp.school.entity.Program;
import com.erp.school.entity.Section;
import com.erp.school.entity.Standard;
import com.erp.school.entity.Subject;
import com.erp.school.entity.SubjectFacultyMapping;
import com.erp.school.entity.SubjectStandardMapping;
import com.erp.school.service.MasterViewService;
import com.etpl.common.util.RESTUtil;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@CrossOrigin
@RestController
@RequestMapping("/v/master/")
@Api(value = "School information Read API Service", description = "Read API Services can be used to read Institution, Board, Program, Standard, Subject Details", tags = {
		"School ERP Master Read API" })
public class MasterViewController {

	@Autowired
	private MasterViewService viewService;

	/**
	 * ########################### Institution Information ########################################
	 */

//Institution Information by ID
	@ApiOperation(value = "To Read Institution details based on Autogenerated IDs", response = Institution.class)
	@PostMapping(value = "institution/byid/")
	public ResponseEntity<?> getById(@RequestParam(name = "institutionId", required = true) long institutionId) {
		return new ResponseEntity<Institution>(viewService.getByInstitutionId(institutionId), HttpStatus.OK);
	}

// Retrieve all institutions
	@ApiOperation(value = "To Read all Institutions", response = Institution.class)
	@GetMapping(value = "allinstitutions/")
	public ResponseEntity<List<?>> getAllInstitutions() {
		List<?> resultList = RESTUtil.ResponseEntityList(viewService.getAllInstitutions(), "Institution");
		return new ResponseEntity<List<?>>(resultList, HttpStatus.OK);
	}
	/**
	 * ########################### Board Information ########################################
	 */

	// Board Information by ID
	@ApiOperation(value = "To Read Board details based on Autogenerated IDs", response = Board.class)
	@PostMapping(value = "board/byid/")
	public ResponseEntity<?> getByBoardId(@RequestParam(name = "id", required = true) long id) {
		return new ResponseEntity<Board>(viewService.getByBoardId(id), HttpStatus.OK);
	}

	// Board Information by Institution ID
	@ApiOperation(value = "To Read Board details based on Institution Id", response = Board.class)
	@PostMapping(value = "board/instid/")
	public ResponseEntity<?> getBoardByInstId(@RequestBody Board reqObj) {
		return new ResponseEntity<List<Board>>(viewService.getBoardByInstId(reqObj.getRefInstId()), HttpStatus.OK);
	}

	// Retrieve all Boards
	@ApiOperation(value = "To Read all Boards", response = Board.class)
	@GetMapping(value = "allboards/")
	public ResponseEntity<List<?>> getAllBoards() {
		List<?> resultList = RESTUtil.ResponseEntityList(viewService.getAllBoards(), "Board");
		return new ResponseEntity<List<?>>(resultList, HttpStatus.OK);
	}
	
	/**
	 * ########################### Program Information ########################################
	 */
	
	// Program Information by Autogenerated ID
	@ApiOperation(value = "To Read Program details based on Autogenerated IDs", response = Program.class)
	@PostMapping(value = "program/byid/")
	public ResponseEntity<?> getByProgramId(@RequestParam(name = "id", required = true) long id) {
		return new ResponseEntity<Program>(viewService.getByProgramId(id), HttpStatus.OK);
	}
	
	// Program Information by Institution ID & Board Id
	@ApiOperation(value = "To Read Program details based on Institution Id & Board Id", response = Program.class)
	@PostMapping(value = "program/instid/boardid/")
	public ResponseEntity<?> getByInstIdAndBoardId(@RequestBody Program reqObj) {
		return new ResponseEntity<List<Program>>(viewService.getByInstIdAndBoardId(reqObj.getRefInstId(), reqObj.getRefBoardId()), HttpStatus.OK);
	}
	
	/**
	 * ########################### Standard Information ########################################
	 */
	
	// Standard Information by Autogenerated ID
	@ApiOperation(value = "To Read Standard details based on Autogenerated IDs", response = Standard.class)
	@PostMapping(value = "standard/byid/")
	public ResponseEntity<?> getStandardById(@RequestParam(name = "id", required = true) long id) {
		return new ResponseEntity<Standard>(viewService.getStandardById(id), HttpStatus.OK);
	}
	
	// Program Information by Institution ID & Board Id
	@ApiOperation(value = "To Read Standard details based on Institution Id & Program Id", response = Standard.class)
	@PostMapping(value = "standard/instid/progid/")
	public ResponseEntity<?> getByInstIdAndProgramId(@RequestBody Standard reqObj) {
		return new ResponseEntity<List<Standard>>(viewService.getByInstIdAndProgramId(reqObj.getRefInstId(), reqObj.getRefProgramId()), HttpStatus.OK);
	}
	
	/** ########################## Subject Details ######################################## */
	
	// Subject details by Autogenerated ID
	@ApiOperation(value = "To Read Subject details based on Autogenerated IDs", response = Subject.class)
	@PostMapping(value = "subject/byid/")
	public ResponseEntity<?> getSubjectById(@RequestParam(name = "id", required = true) long id) {
		return new ResponseEntity<Subject>(viewService.getSubjectById(id), HttpStatus.OK);
	}
	
	// Subject details by Institution ID & Board Id
	@ApiOperation(value = "To Read Subject details based on Institution Id & Course Id", response = Subject.class)
	@PostMapping(value = "subject/instid/courseid/")
	public ResponseEntity<?> getByInstIdAndCourseId(@RequestBody Subject reqObj) {
		return new ResponseEntity<List<Subject>>(viewService.getByInstIdAndCourseId(reqObj.getRefInstId(), reqObj.getRefCourseId()), HttpStatus.OK);
	}
	
	/** ########################## Faculty Details ######################################## */
	
	// Faculty details by Autogenerated ID
	@ApiOperation(value = "To Read Faculty details based on Autogenerated IDs", response = MasterFaculty.class)
	@PostMapping(value = "faculty/byid/")
	public ResponseEntity<?> getFacultyById(@RequestParam(name = "id", required = true) long id) {
		return new ResponseEntity<MasterFaculty>(viewService.getFacultyById(id), HttpStatus.OK);
	}
	
	// Faculty details by Institution ID
	@ApiOperation(value = "To Read Faculty details based on Institution ID", response = MasterFaculty.class)
	@PostMapping(value = "faculty/instid/")
	public ResponseEntity<?> getFacultyByInstId(@RequestParam(name = "refInstId", required = true) long refInstId) {
		return new ResponseEntity<List<MasterFaculty>>(viewService.getFacultyByInstId(refInstId), HttpStatus.OK);
	}
	
	/** ########################## Faculty Details ######################################## */
	
	// Student details by Autogenerated ID
	@ApiOperation(value = "To Read Student details based on Autogenerated IDs", response = MasterStudent.class)
	@PostMapping(value = "student/byid/")
	public ResponseEntity<?> getStudentById(@RequestParam(name = "id", required = true) long id) {
		return new ResponseEntity<MasterStudent>(viewService.getStudentById(id), HttpStatus.OK);
	}

	// Student details by institution ID
	@ApiOperation(value = "To Read Student details based on Institution ID", response = MasterStudent.class)
	@PostMapping(value = "student/byinstid/")
	public ResponseEntity<?> getByInstId(@RequestParam(name = "refInstId", required = true) long refInstId) {
		return new ResponseEntity<List<MasterStudent>>(viewService.getByInstId(refInstId), HttpStatus.OK);
	}
	
	/** ########################## Subject Faculty Mapping Details ######################################## */
	
	// Subject Faculty Mapping details by Autogenerated ID
	@ApiOperation(value = "To Read Subject-Faculty details based on Autogenerated IDs", response = SubjectFacultyMapping.class)
	@PostMapping(value = "facultymap/byid/")
	public ResponseEntity<?> getSubjectFacultyMapById(@RequestParam(name = "id", required = true) long id) {
		return new ResponseEntity<SubjectFacultyMapping>(viewService.getSubjectFacultyMapById(id), HttpStatus.OK);
	}
	
	// Subject Faculty Mapping details by Institution Id & Subject Id
	@ApiOperation(value = "To Read Subject details based on Institution Id & Subject Id", response = SubjectFacultyMapping.class)
	@PostMapping(value = "facultymap/instid/subjectid/")
	public ResponseEntity<?> getByInstIdAndSubjectId(@RequestBody SubjectFacultyMapping reqObj) {
		return new ResponseEntity<List<SubjectFacultyMapping>>(
				viewService.getByInstIdAndSubjectId(reqObj.getRefInstId(), reqObj.getRefSubjectId()), HttpStatus.OK);
	}
	
	// Subject Faculty Mapping details by Institution Id & Faculty Id
	@ApiOperation(value = "To Read Subject details based on Institution Id & Faculty Id", response = SubjectFacultyMapping.class)
	@PostMapping(value = "facultymap/instid/facultyid/")
	public ResponseEntity<?> getByInstIdAndFacultyId(@RequestBody SubjectFacultyMapping reqObj) {
		return new ResponseEntity<List<SubjectFacultyMapping>>(
				viewService.getByInstIdAndFacultyId(reqObj.getRefInstId(), reqObj.getRefFacultyId()), HttpStatus.OK);
	}
	
	/** ########################## Section Details ######################################## */
	
	// Section details by Autogenerated ID
	@ApiOperation(value = "To Read Section details based on Autogenerated IDs", response = Section.class)
	@PostMapping(value = "section/byid/")
	public ResponseEntity<?> getSectionById(@RequestParam(name = "id", required = true) long id) {
		return new ResponseEntity<Section>(viewService.getSectionById(id), HttpStatus.OK);
	}

	// Section details by Autogenerated ID
	@ApiOperation(value = "To Read Section details based on Autogenerated IDs", response = Section.class)
	@PostMapping(value = "section/instid/courseid/")
	public ResponseEntity<?> getSectionByInstIdAndCourseId(@RequestBody Section reqObj) {
		return new ResponseEntity<List<Section>>(
				viewService.getSectionByInstIdAndCourseId(reqObj.getRefInstId(), reqObj.getRefCourseId()),
				HttpStatus.OK);
	}
	
/** ########################## Academic Year Information ######################################## */
	
	// Academic Year details by Autogenerated ID
	@ApiOperation(value = "To Read Academic Year details based on Autogenerated IDs", response = AcademicYear.class)
	@PostMapping(value = "year/byid/")
	public ResponseEntity<?> getYearById(@RequestParam(name = "id", required = true) long id) {
		return new ResponseEntity<AcademicYear>(viewService.getYearById(id), HttpStatus.OK);
	}

	// Fetch Academic Year details by Institution ID
	@ApiOperation(value = "To Read Academic Year details based on Institution IDs", response = AcademicYear.class)
	@PostMapping(value = "year/instid/")
	public ResponseEntity<?> getYearByInstId(@RequestBody AcademicYear reqObj) {
		return new ResponseEntity<List<AcademicYear>>(viewService.getYearByInstId(reqObj.getRefInstId()), HttpStatus.OK);
	}
	
/** ########################## Academic Day Order Information ######################################## */
	
	// Dayorder details by Autogenerated ID
	@ApiOperation(value = "To Read Academic Day Order details based on Autogenerated IDs", response = AcademicYear.class)
	@PostMapping(value = "dayorder/byid/")
	public ResponseEntity<?> getDayorderById(@RequestParam(name = "id", required = true) long id) {
		return new ResponseEntity<Dayorder>(viewService.getDayorderById(id), HttpStatus.OK);
	}
	
	// Dayorder details by Institution ID, Board Id, Program Id & Year Id
	@ApiOperation(value = "To Read Dayorder details based on Institution Id, Board Id, Program Id & Year Id", response = AcademicYear.class)
	@PostMapping(value = "dayorder/instid/")
	public ResponseEntity<?> getDayorderByMultipleIds(@RequestBody Dayorder reqObj) {
		return new ResponseEntity<List<Dayorder>>(viewService.getDayorderByMultipleIds(reqObj),
				HttpStatus.OK);
	}
	
/** ########################## Academic Timetable Information ######################################## */
	
	// Timetable details by Autogenerated ID
	@ApiOperation(value = "To Read Timetable details based on Autogenerated IDs", response = AcademicTimetable.class)
	@PostMapping(value = "timetable/byid/")
	public ResponseEntity<?> getTimetableById(@RequestParam(name = "id", required = true) long id) {
		return new ResponseEntity<AcademicTimetable>(viewService.getTimetableById(id), HttpStatus.OK);
	}
	
	// Timetable details by Institution ID, Board Id, Program Id, Year Id & Section Id
	@ApiOperation(value = "To Read Timetable details based on Institution Id, Board Id, Program Id, Year Id & Section Id", response = AcademicTimetable.class)
	@PostMapping(value = "timetable/instid/")
	public ResponseEntity<?> getTimetableByMultipleIds(@RequestBody AcademicTimetable reqObj) {
		return new ResponseEntity<List<AcademicTimetable>>(viewService.getTimetableByMultipleIds(reqObj), HttpStatus.OK);
	}
	
/** ########################## Subject Standard Mapping Information ######################################## */
	
	// Subject Standard Mapping details by Autogenerated ID
	@ApiOperation(value = "To Read Timetable details based on Autogenerated IDs", response = SubjectStandardMapping.class)
	@PostMapping(value = "map/byid/")
	public ResponseEntity<?> getMapById(@RequestParam(name = "id", required = true) long id) {
		return new ResponseEntity<SubjectStandardMapping>(viewService.getMapById(id), HttpStatus.OK);
	}

	// Subject Standard Mapping details by Institution Id and Section Id
	@ApiOperation(value = "To Read Timetable details based on Institution Id and Section Id", response = SubjectStandardMapping.class)
	@PostMapping(value = "map/instid/sectionid")
	public ResponseEntity<?> getSubjectStandardByInstIdAndSectionId(@RequestBody SubjectStandardMapping reqObj) {
		return new ResponseEntity<List<SubjectStandardMapping>>(viewService.getSubjectStandardByInstIdAndSectionId(reqObj), HttpStatus.OK);
	}
		
	
}
